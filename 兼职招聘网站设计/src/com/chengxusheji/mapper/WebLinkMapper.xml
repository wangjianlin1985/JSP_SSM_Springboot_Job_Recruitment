<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.WebLinkMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加友情链接记录 -->
	<insert id="addWebLink" parameterType="webLink">
		insert into t_webLink(webName,webLogo,webAddress) values 
		(#{webName},#{webLogo},#{webAddress})
	</insert>

	<!-- 按照查询条件分页查询友情链接记录 -->
	<select id="queryWebLink" resultMap="webLinkMap" >
		select t_webLink.* from t_webLink ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="webLinkMap" type="webLink">
        <id property="linkId" column="linkId" />
    </resultMap>

    <!-- 按照查询条件查询所有友情链接记录 -->
	<select id="queryWebLinkList" resultMap="webLinkMap" >
		select t_webLink.* from t_webLink ${where}
	</select>

    <!-- 按照查询条件的友情链接记录数 -->
	<select id="queryWebLinkCount" resultType="int">
		select count(*) from t_webLink ${where}
	</select>

	<!-- 根据主键查询某个友情链接记录 -->
	<select id="getWebLink" parameterType="int" resultMap="webLinkMap">
		select * from t_webLink where t_webLink.linkId = #{linkId}
	</select>

	<!-- 更新友情链接记录 -->
	<update id="updateWebLink" parameterType="webLink">
		update t_webLink set webName=#{webName},webLogo=#{webLogo},webAddress=#{webAddress} where linkId = #{linkId}
	</update>

	<!-- 删除友情链接记录 -->
	<delete id="deleteWebLink" parameterType="int">
		delete from t_webLink where linkId=#{linkId}
	</delete>

</mapper>
